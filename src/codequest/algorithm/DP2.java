package codequest.algorithm;

// 계단 오르기 분제
/*
당신은 계단을 오르고 있습니다. 한 번에 1계단 또는 2계단을 오를 수 있습니다. 
총 n개의 계단을 올라가는 방법의 수를 구하는 문제입니다. 
예를 들어, n = 3일 경우 [1계단+1계단+1계단], [1계단+2계단], [2계단+1계단]의 3가지 방법이 있습니다.

이 문제는 피보나치 수열과 매우 유사합니다. 
각 계단을 오르는 방법은 이전 계단에서 1계단 올라오는 경우와, 2계단 올라오는 경우의 합이기 때문입니다.
 * */
public class DP2 {
	public void run() {
		int n = 9;
		
		if(n <= 1 ) System.out.println(1);
		
		int[] dp = new int[n+1];
		dp[0] = 1; // 0계단에 도달하는 방법 1가지(아무것도 하지 않은 것)
		dp[1] = 1; // 1계단에 도달하는 방법 1가지
		
		for(int i=2; i<=n; i++) {
			dp[i] = dp[i-1] + dp[i-2];
		}
		
		System.out.println(dp[n]);
	}
}
